openapi: 3.0.0
info:
  title: Timebank
  description: Timebank API documentation
  version: '1.0'

security:
  - bearerAuth: []
  
paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags: 
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string
                
  /v1/persons:
    get:
      operationId: getPersons
      summary: Get list of Timebank persons.
      description: Get list of Timebank persons.
      tags: 
        - Timebank
      responses:
        "200":
          description: Get list of Timebank persons.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonData"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/entries/{personId}:
    get:
      operationId: getPersonTimeEntries
      summary: Find persons time entries.
      description: Find persons time entries by personId.
      tags:
        - Timebank
      parameters:
        - name: personId
          required: true
          in: path
          description: Timebank person unique ID
          schema:
            type: string
            format: uuid
        - name: before
          required: false
          in: query
          description: Retrieve time entries before given date.
          schema:
            type: string
        - name: after
          required: false
          in: query
          description: Retrieve time entries after given date.
          schema:
            type: string
      responses:
        "200":
          description: Persons time entries by personId
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntry'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sync:
    post:
      operationId: syncTimeFromForecast
      summary: Synchronizes time entries from Forecast API.
      description: Retrieves and synchronizes time entries from Forecast API.
      tags:
        - Timebank
      parameters:
        - name: before
          required: false
          in: query
          description: Synchronizes before given date.
          schema:
            type: string
        - name: after
          required: false
          in: query
          description: Synchronizes after given date.
          schema:
            type: string
      responses:
        "200":
          description: Synchronized time entries from Forecast API.
          content:
            text/plain:
              schema:
                type: string
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        
  /v1/total/{personId}:
    get:
      operationId: getPersonTotal
      summary: Find persons total time entries.
      description: Find persons total time entries.
      tags:
        - Timebank
      parameters:
        - name: personId
          required: true
          in: path
          schema:
            type: string
            format: uuid
        - name: timespan
          required: false
          in: query
          description: Default value is ALL_TIME.
          schema:
            $ref: "#/components/schemas/Timespan"
      responses:
        "200":
          description: |-
            When getting total from all the time,
                              _id field will be null, otherwise it will be
                              combination of year and month or year and week
                              depending on timespan parameter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeEntryTotal"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          
    Timespan:
      type: string
      description: Enum for timespan
      enum: 
        - ALL TIME
        - YEAR
        - MONTH
        - WEEK
          
    PersonData:
      type: object
      description: Person Data from Forecast API
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        user_type:
          type: string
        client_id:
          type: number
        holiday_calendar_id:
          type: number
        monday:
          type: number
        tuesday:
          type: number
        wednesday:
          type: number
        thursday:
          type: number
        friday:
          type: number
        saturday:
          type: number
        sunday:
          type: number
        active:
          type: boolean
        default_role:
          type: number
        cost:
          type: number
        language:
          type: string
        created_by:
          type: number
        updated_by:
          type: number
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        start_date:
          type: string
      required:
        - id
        - first_name
        - last_name
        - email
        - user_type
        - client_id
        - holiday_calendar_id
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
        - active
        - default_role
        - cost
        - language
        - created_by
        - updated_by
        - created_at
        - updated_at
        - start_date
        
    TimeEntry:
      type: object
      description: Person's time entries
      properties:
        externalId:
          type: string
        person:
          type: number
        internalTime:
          type: number
        projectTime:
          type: number
        logged:
          type: number
        expected:
          type: number
        total:
          type: number
        date:
          format: date-time
          type: string
      required:
        - externalId
        - person
        - internalTime
        - projectTime
        - logged
        - expected
        - total
        - date
        
    TimeEntryTotalSpan:
      type: object
      description: Optional year/month/week number. Default is all time.
      properties:
        year:
          type: number
        month:
          type: number
        week:
          type: number
          
    TimeEntryTotal:
      type: object
      description: Person's total time
      properties:
        _id:
          $ref: '#/components/schemas/TimeEntryTotalSpan'
        total:
          type: number
        logged:
          type: number
        expected:
          type: number
        internalTime:
          type: number
        projectTime:
          type: number
      required:
        - total
        - logged
        - expected
        - internalTime
        - projectTime
