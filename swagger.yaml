openapi: 3.0.0
info:
  title: Timebank
  description: Timebank API documentation
  version: '1.0'

security:
  - bearerAuth: []
  
paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags: 
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string
                
  /v1/persons:
    get:
      operationId: getPersons
      summary: Get list of Timebank persons.
      description: Get list of Timebank persons.
      tags: 
        - Persons
      responses:
        "200":
          description: Get list of Timebank persons.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/entries/{personId}:
    get:
      operationId: getPersonTimeEntries
      summary: Find persons time entries.
      description: Find persons time entries by personId.
      tags:
        - Timebank
      parameters:
        - name: personId
          required: true
          in: path
          description: Timebank person unique ID
          schema:
            type: string
            format: uuid
        - name: before
          required: false
          in: query
          description: Retrieve time entries before given date.
          schema:
            type: string
        - name: after
          required: false
          in: query
          description: Retrieve time entries after given date.
          schema:
            type: string
      responses:
        "200":
          description: Persons time entries by personId
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntry'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sync:
    post:
      operationId: syncTimeFromForecast
      summary: Synchronizes time entries from Forecast API.
      description: Retrieves and synchronizes time entries from Forecast API.
      tags:
        - Synchronize
      parameters:
        - name: before
          required: false
          in: query
          description: Synchronizes before given date.
          schema:
            type: string
            format: date
        - name: after
          required: false
          in: query
          description: Synchronizes after given date.
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Synchronized time entries from Forecast API.
          content:
            text/plain:
              schema:
                type: string
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        
  /v1/persons/{personId}/total:
    get:
      operationId: listPersonTotalTime
      summary: Lists persons total time entries.
      description: Lists persons total time entries.
      tags:
        - Persons
      parameters:
        - name: personId
          required: true
          in: path
          schema:
            type: string
            format: uuid
        - name: timespan
          required: false
          in: query
          description: Default value is ALL_TIME.
          schema:
            $ref: "#/components/schemas/Timespan"
      responses:
        "200":
          description: |-
            When getting total from all the time,
                              _id field will be null, otherwise it will be
                              combination of year and month or year and week
                              depending on timespan parameter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeEntryTotal"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
          
    Timespan:
      type: string
      description: Enum for timespan
      enum: 
        - ALL TIME
        - YEAR
        - MONTH
        - WEEK
          
    Person:
      type: object
      description: Person Data from Forecast API
      required:
        - id
        - firstName
        - lastName
        - email
        - userType
        - clientId
        - holidayCalendarId
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
        - active
        - defaultRole
        - cost
        - language
        - startDate
        - createdBy
        - updatedBy
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int32
          description: Person ID in Forecast.
        firstName:
          type: string
          description: Person first name.
        lastName:
          type: string
          description: Person last name.
        email:
          type: string
          description: Person email.
        userType:
          type: string
          description: Persons user type.
        clientId:
          type: number
          description: Persons client ID.
        holidayCalendarId:
          type: number
          description: Persons holiday calendar ID.
        monday:
          type: number
          description: Persons expected working hours in minutes.
        tuesday:
          type: number
          description: Persons expected working hours in minutes.
        wednesday:
          type: number
          description: Persons expected working hours in minutes.
        thursday:
          type: number
          description: Persons expected working hours in minutes.
        friday:
          type: number
          description: Persons expected working hours in minutes.
        saturday:
          type: number
          description: Persons expected working hours in minutes.
        sunday:
          type: number
          description: Persons expected working hours in minutes.
        active:
          type: boolean
          description: Defining is person active e.g. is employeed.
        defaultRole:
          type: number
          description: ID of default role.
        cost:
          type: number
          description: Cost from the current cost period, decimal.
        language:
          type: string
          description: Locale.
        startDate:
          type: string
          description: Start date of employment, String.
        endDate:
          type: string
          description: End date of employment, String.
        createdBy:
          type: number
          description: ID of user's creator.
        updatedBy:
          type: number
          description: ID of user's updater.
        createdAt:
          type: string
          format: date-time
          description: User's start date, DateTime.
        updatedAt:
          type: string
          format: date-time
          description: User's end date, DateTime.
        
    TimeEntry:
      type: object
      description: Person's time entries
      required:
        - id
        - person
        - internalTime
        - projectTime
        - logged
        - expected
        - total
        - date
      properties:
        id:
          type: string
          format: uuid
          description: ID of TimeEntry, UUID
        person:
          type: number
          format: int32
          description: Person ID in Forecast
        internalTime:
          type: number
          description: Amount of internal time per time entry
        projectTime:
          type: number
          description: Amount of project time per time entry
        logged:
          type: number
          description: Amount of time logged per time entry
        expected:
          type: number
          description: Amount of time expected per time entry
        total:
          type: number
          description: Total amount of worktime per time entry
        date:
          type: string
          format: date-time
          description: Date of time entry
        
    TimeEntryTotalUnit:
      type: object
      description: Optional year/month/week number. Unit of duration of the total time entry. Default is all time.
      properties:
        year:
          type: number
        month:
          type: number
        week:
          type: number
          
    TimeEntryTotal:
      type: object
      description: Person's total time
      required:
        - total
        - logged
        - expected
        - internalTime
        - projectTime
      properties:
        TimeEntryTotalUnit:
          $ref: '#/components/schemas/TimeEntryTotalUnit'
          description: Optional year/month/week number. Unit of duration of the total time entry. Default is all time.
        total:
          type: number
          description: Difference between expected and logged time.
        logged:
          type: number
          description: Total amount logged time of person.
        expected:
          type: number
          description: Total amount expected time of person.
        internalTime:
          type: number
          description: Total amount of internal time of person.
        projectTime:
          type: number
          description: Total amount of project time of person.
